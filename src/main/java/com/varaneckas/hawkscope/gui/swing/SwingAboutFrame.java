/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AboutFrame.java
 *
 * Created on Sep 28, 2008, 12:17:00 PM
 */

package com.varaneckas.hawkscope.gui.swing;

import java.awt.Desktop;
import java.awt.DisplayMode;
import java.awt.GraphicsEnvironment;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.net.URI;

import javax.swing.Icon;
import javax.swing.ImageIcon;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

import com.varaneckas.hawkscope.Version;
import com.varaneckas.hawkscope.gui.AboutWindow;
import com.varaneckas.hawkscope.util.IOUtils;
import com.varaneckas.hawkscope.util.IconFactory;

/**
 * About box
 *
 * @author Tomas Varaneckas
 * @version $Id$
 */
public class SwingAboutFrame extends javax.swing.JFrame implements AboutWindow {

    /**
     * Logger
     */
    private static final Log log = LogFactory.getLog(SwingAboutFrame.class);

    /**
     * Serial Version UID
     */
    private static final long serialVersionUID = 2324352047369162981L;
    
    private IconFactory<Icon> iconFactory = null;

    public SwingAboutFrame() {
        initComponents();
        DisplayMode dm = GraphicsEnvironment.getLocalGraphicsEnvironment()
            .getDefaultScreenDevice().getDisplayMode();
        setLocation(dm.getWidth() / 2 - getWidth() / 2, dm.getHeight() / 2 - getHeight() / 2);
        setIconImage(((ImageIcon) getIconFactory().getUncachedIcon("hawkscope16.png")).getImage());
    }

    /** 
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        appName = new javax.swing.JLabel();
        appReleased = new javax.swing.JLabel();
        appHomepage = new javax.swing.JLabel();
        closeButton = new javax.swing.JButton();
        appDescription = new javax.swing.JLabel();
        labelVersion = new javax.swing.JLabel();
        appVersion = new javax.swing.JLabel();
        labelReleased = new javax.swing.JLabel();
        labelHomepage = new javax.swing.JLabel();
        logoPanel = new javax.swing.JPanel();
        hawkscopeLogo = new javax.swing.JLabel();
        labelHomepage1 = new javax.swing.JLabel();
        envScrollPane = new javax.swing.JScrollPane();
        envTextArea = new javax.swing.JTextArea();
        copyToClipboardButton = new javax.swing.JButton();

        setTitle("About");
        setResizable(false);

        appName.setFont(appName.getFont().deriveFont(appName.getFont().getStyle() | java.awt.Font.BOLD, appName.getFont().getSize()+3));
        appName.setText("Hawkscope");

        appReleased.setFont(appReleased.getFont());
        appReleased.setText("XXXX-XX-XX");

        appHomepage.setFont(appHomepage.getFont());
        appHomepage.setForeground(new java.awt.Color(0, 22, 255));
        appHomepage.setText("http://hawkscope.googlecode.com");
        appHomepage.setToolTipText("Click to open in browser");

        closeButton.setFont(closeButton.getFont());
        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        appDescription.setFont(appDescription.getFont());
        appDescription.setText("Access anything with single click");

        labelVersion.setFont(labelVersion.getFont().deriveFont(labelVersion.getFont().getStyle() | java.awt.Font.BOLD));
        labelVersion.setText("Version:");

        appVersion.setFont(appVersion.getFont());
        appVersion.setText("X.X.X");

        labelReleased.setFont(labelReleased.getFont().deriveFont(labelReleased.getFont().getStyle() | java.awt.Font.BOLD));
        labelReleased.setText("Released:");

        labelHomepage.setFont(labelHomepage.getFont().deriveFont(labelHomepage.getFont().getStyle() | java.awt.Font.BOLD));
        labelHomepage.setText("Homepage:");

        logoPanel.setLayout(new java.awt.BorderLayout());

        hawkscopeLogo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        hawkscopeLogo.setToolTipText("Click to visit Homepage");
        hawkscopeLogo.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        logoPanel.add(hawkscopeLogo, java.awt.BorderLayout.CENTER);
        hawkscopeLogo.setIcon((Icon) getIconFactory().getUncachedIcon("hawkscope128.png"));
        hawkscopeLogo.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(final MouseEvent e) {
                try {
                    Desktop.getDesktop().browse(new URI(Version.HOMEPAGE));
                    setVisible(false);
                } catch (final Exception e1) {
                    log.warn("Failed browsing", e1);
                }
            }
        });

        labelHomepage1.setFont(labelHomepage1.getFont().deriveFont(labelHomepage1.getFont().getStyle() | java.awt.Font.BOLD));
        labelHomepage1.setText("Environment:");

        envScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        envScrollPane.setVerifyInputWhenFocusTarget(false);

        envTextArea.setColumns(20);
        envTextArea.setEditable(false);
        envTextArea.setRows(5);
        envScrollPane.setViewportView(envTextArea);
        envTextArea.setText(Version.getSystemProperties());

        copyToClipboardButton.setText("Copy to Clipboard");
        copyToClipboardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyToClipboardButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(logoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(appName)
                            .addComponent(appDescription)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(labelReleased)
                                            .addComponent(labelVersion))
                                        .addGap(36, 36, 36))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(labelHomepage)
                                        .addGap(23, 23, 23)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(appReleased)
                                    .addComponent(appHomepage)
                                    .addComponent(appVersion))))
                        .addGap(56, 56, 56))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(copyToClipboardButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(closeButton)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(envScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 389, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelHomepage1)
                        .addContainerGap(304, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(appName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(appDescription)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelVersion)
                            .addComponent(appVersion))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelReleased)
                            .addComponent(appReleased))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelHomepage)
                            .addComponent(appHomepage)))
                    .addComponent(logoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelHomepage1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(envScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(closeButton)
                    .addComponent(copyToClipboardButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        appName.setText(Version.APP_NAME);
        appReleased.setText(Version.VERSION_DATE);
        appHomepage.setText(Version.HOMEPAGE);
        appHomepage.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(final MouseEvent e) {
                try {
                    Desktop.getDesktop().browse(new URI(appHomepage.getText()));
                    setVisible(false);
                } catch (final Exception e1) {
                    log.warn("Failed browsing", e1);
                }
            }
        });
        appDescription.setText(Version.APP_SLOGAN);
        appVersion.setText(Version.VERSION_NUMBER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        setVisible(false);
}//GEN-LAST:event_closeButtonActionPerformed

    private void copyToClipboardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyToClipboardButtonActionPerformed
        IOUtils.copyToClipboard(Version.getEnvironmentReport());
    }//GEN-LAST:event_copyToClipboardButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel appDescription;
    private javax.swing.JLabel appHomepage;
    private javax.swing.JLabel appName;
    private javax.swing.JLabel appReleased;
    private javax.swing.JLabel appVersion;
    private javax.swing.JButton closeButton;
    private javax.swing.JButton copyToClipboardButton;
    private javax.swing.JScrollPane envScrollPane;
    private javax.swing.JTextArea envTextArea;
    private javax.swing.JLabel hawkscopeLogo;
    private javax.swing.JLabel labelHomepage;
    private javax.swing.JLabel labelHomepage1;
    private javax.swing.JLabel labelReleased;
    private javax.swing.JLabel labelVersion;
    private javax.swing.JPanel logoPanel;
    // End of variables declaration//GEN-END:variables

    @Override
    public void hideObject() {
        setVisible(false);
    }

    @Override
    public void showObject() {
        setVisible(true);        
    }
    
    private IconFactory<Icon> getIconFactory() {
        if (iconFactory == null) {
            iconFactory = new SwingIconFactory();
        } 
        return iconFactory;
    }

}
